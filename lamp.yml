---
- hosts: cilent1
  tasks:
    - name: Add the user 'Ongraph' 
      user:
        name: ongraph
        comment: ongraph 
        createhome: yes        # Defaults to yes
        home: /home/MyOngraph
    - name: Set directory permissions
      file:
        path: /home/MyOngraph
        mode: "0755"
        state: directory      
    - name: Installing httpd
      yum:
        name: httpd
        state: present    
    - name: Creating config file
      copy:
        content: | 
          DocumentRoot /home/MyOngraph
          <Directory "/home/MyOngraph">
          Options Indexes FollowSymLinks
          AllowOverride None
          Require all granted
          </Directory>
        dest: /etc/httpd/conf.d/khan.conf 
    - name: Creating index.html
      copy:
        content: 'final testing'
        dest: /home/MyOngraph/index.html
    - name: Changing security context of the file or directory
      shell: chcon -t httpd_sys_rw_content_t /home/MyOngraph/index.html
    - name: Add ports to firewall
      firewalld:
        rich_rule: "rule family='ipv4' port port='80' protocol='tcp' accept"
        state: enabled
        permanent: yes
    - name: reload firewalld
      command: firewall-cmd --reload      
    - name: Restart service httpd, after changing conf file
      service:
        name: httpd
        state: restarted










- hosts: cilent2
  become: yes
  vars_files:
   - /root/ansible_poc/variable.yml
  tasks:
    - name: Gather facts
      debug:
        msg: "{{ hostvars[groups.cilent1.0].ansible_default_ipv4.address }}"
    - name: Add ports to firewall
      firewalld:
        rich_rule: "rule family='ipv4' source address='{{ hostvars[groups.cilent1.0].ansible_default_ipv4.address }}' port port='3306' protocol='tcp' accept"
        state: enabled
        permanent: yes
    - name: reload firewalld
      command: firewall-cmd --reload       
    - name: Install package
      dnf:
       name: mysql-server
       state: present
    - name: start up the mysql service  
      shell: "systemctl start mysqld"   
    - name: ensure mysql is enabled to run on startup  
      service: 
       name: mysqld 
       state: restarted 
       enabled: true
    - name: Install PyMySQL
      package:
       name: python3-PyMySQL
       state: present
    - name: Load variables from a file on the managed host
      include_vars:
         file: variable.yml
    - name: Create MySQL user
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        host: '%'
        priv: "*.*:ALL"
        state: present
